"use strict";(()=>{var e={};e.id=871,e.ids=[871],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8474:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>y,patchFetch:()=>T,requestAsyncStorage:()=>w,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var a={};n.r(a),n.d(a,{GET:()=>l,dynamic:()=>d});var r=n(9182),i=n(2007),c=n(6719),o=n(3442),s=n(3524),g=n(8676);let d="force-dynamic",u=new s.PrismaClient;async function l(e,{params:t}){try{let{searchParams:n}=new URL(e.url),a=parseInt(n.get("days")||"30"),r=new g.Z(u),i=await r.getAccountAnalytics(t.username,a);return o.NextResponse.json(i)}catch(e){return console.error("Error fetching account analytics:",e),o.NextResponse.json({error:"Failed to fetch account analytics"},{status:500})}}let p=new r.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/analytics/[username]/route",pathname:"/api/analytics/[username]",filename:"route",bundlePath:"app/api/analytics/[username]/route"},resolvedPagePath:"/home/ubuntu/ai_tweet_monitor/app/app/api/analytics/[username]/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:w,staticGenerationAsyncStorage:m,serverHooks:h}=p,y="/api/analytics/[username]/route";function T(){return(0,c.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},8676:(e,t,n)=>{n.d(t,{Z:()=>r});class a{constructor(e){this.prisma=e}async analyzeTrends(e=24){let t=new Date(Date.now()-36e5*e);try{await this.calculateTweetTrendingScores(t),await this.calculateTopicTrendingScores(t);let e=await this.getTopTrendingTweets(50),n=await this.getTopTrendingTopics(20),a=await this.generateInsights(t);return{topTrendingTweets:e,topTrendingTopics:n,insights:a}}catch(e){throw console.error("Error analyzing trends:",e),e}}async calculateTweetTrendingScores(e){try{for(let t of(await this.prisma.tweet.findMany({where:{createdAt:{gte:e}},include:{analytics:{orderBy:{recordedAt:"desc"},take:5},account:!0}}))){let e=this.calculateTweetTrendingScore(t);await this.prisma.tweet.update({where:{id:t.id},data:{trendingScore:e,isTrending:e>parseFloat(process.env.TRENDING_THRESHOLD||"50")}})}}catch(e){throw console.error("Error calculating tweet trending scores:",e),e}}calculateTweetTrendingScore(e){let t=(Date.now()-e.createdAt.getTime())/36e5,n=0;if(e.analytics.length>=2){let t=e.analytics[0],a=e.analytics[1],r=(t.recordedAt.getTime()-a.recordedAt.getTime())/36e5;r>0&&(n=(t.engagementScore-a.engagementScore)/r)}let a=e.account.followerCount?Math.log10(e.account.followerCount+1)/10:1;return Math.max(0,e.engagementScore*Math.max(.1,1-t/168)/a+10*n)}async calculateTopicTrendingScores(e){try{for(let t of(await this.prisma.trendingTopic.findMany({where:{lastSeen:{gte:e},isActive:!0}}))){let e=await this.prisma.tweet.count({where:{OR:[{hashtags:{has:t.topic}},{mentions:{has:t.topic}}],createdAt:{gte:new Date(Date.now()-216e5)}}})/6,n=t.engagementSum/Math.max(1,t.mentionCount)+100*e;await this.prisma.trendingTopic.update({where:{id:t.id},data:{velocity:e,trendScore:n,isTrending:n>50&&e>1}})}}catch(e){throw console.error("Error calculating topic trending scores:",e),e}}async getTopTrendingTweets(e){return(await this.prisma.tweet.findMany({where:{isTrending:!0,createdAt:{gte:new Date(Date.now()-6048e5)}},include:{account:!0},orderBy:{trendingScore:"desc"},take:e})).map(e=>({id:e.id,content:e.content,engagementScore:e.engagementScore,trendingScore:e.trendingScore,account:e.account.username,createdAt:e.createdAt}))}async getTopTrendingTopics(e){return(await this.prisma.trendingTopic.findMany({where:{isTrending:!0,isActive:!0},orderBy:{trendScore:"desc"},take:e})).map(e=>({topic:e.topic,type:e.type,trendScore:e.trendScore,velocity:e.velocity,mentionCount:e.mentionCount}))}async generateInsights(e){try{let t=await this.prisma.tweet.count({where:{isTrending:!0,createdAt:{gte:e}}}),n=await this.prisma.tweet.aggregate({where:{createdAt:{gte:e}},_avg:{engagementScore:!0}}),a=await this.prisma.tweet.groupBy({by:["accountId"],where:{createdAt:{gte:e}},_avg:{engagementScore:!0},_count:{id:!0},orderBy:{_avg:{engagementScore:"desc"}},take:5}),r=await Promise.all(a.map(async e=>{let t=await this.prisma.account.findUnique({where:{id:e.accountId},select:{username:!0}});return t?.username||"Unknown"})),i=await this.prisma.trendingTopic.findMany({where:{velocity:{gt:2},firstSeen:{gte:new Date(Date.now()-864e5)},isActive:!0},orderBy:{velocity:"desc"},take:10,select:{topic:!0}});return{totalTrending:t,averageEngagement:n._avg.engagementScore||0,topPerformingAccounts:r,emergingTopics:i.map(e=>e.topic)}}catch(e){return console.error("Error generating insights:",e),{totalTrending:0,averageEngagement:0,topPerformingAccounts:[],emergingTopics:[]}}}async getAccountAnalytics(e,t=30){let n=new Date(Date.now()-864e5*t),a=await this.prisma.account.findUnique({where:{username:e},include:{tweets:{where:{createdAt:{gte:n}},orderBy:{engagementScore:"desc"}}}});if(!a)throw Error(`Account @${e} not found`);let r=a.tweets.length,i=r>0?a.tweets.reduce((e,t)=>e+t.engagementScore,0)/r:0;return{totalTweets:r,averageEngagement:i,topTweets:a.tweets.slice(0,10).map(e=>({content:e.content,engagementScore:e.engagementScore,createdAt:e.createdAt})),trendingTweets:a.tweets.filter(e=>e.isTrending).length,engagementTrend:await this.generateEngagementTrend(a.id,t)}}async generateEngagementTrend(e,t){let n=[];for(let a=t-1;a>=0;a--){let t=new Date(Date.now()-864e5*a),r=new Date(t.getTime()+864e5),i=await this.prisma.tweet.aggregate({where:{accountId:e,createdAt:{gte:t,lt:r}},_avg:{engagementScore:!0}});n.push({date:t.toISOString().split("T")[0],engagement:i._avg.engagementScore||0})}return n}}let r=a}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),a=t.X(0,[372,609],()=>n(8474));module.exports=a})();